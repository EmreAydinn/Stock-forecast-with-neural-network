using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PD_DD_F_K_HisseBaşınaKar
{
    public class Dugum
    {
        #region Girdi Değerleri
        public double[] euro = new double[293] {3.1896,3.2174,3.2119,3.2313,3.2747,3.2545,3.2953,3.2997,3.2663,3.3068,3.3158,3.3138,3.2938,3.3389,3.3179,3.2675,3.2616,3.2797,3.2659,3.2537,3.235,3.2282,3.228,3.2247,
            3.2464,3.2584,3.2714,3.3066,3.2999,3.3213,3.304,3.3021,3.3019,3.3099,3.2977,3.2989,3.2639,3.2396,3.2334,3.2354,3.2354,3.2364,3.208,3.1956,3.184,3.2018,3.2045,3.2241,3.1966,3.167,3.1983,3.2079,
            3.2083,3.2311,3.2332,3.2253,3.2377,3.228,3.2154,3.2199,3.2106,3.214,3.2172,3.2139,3.2148,3.2204,3.211,3.2192,3.2311,3.2451,3.2546,3.2336,3.2349,3.2319,3.2251,3.2219,3.2292,3.216,3.2201,3.1945,
            3.1948,3.2077,3.2033,3.194,3.2002,3.1966,3.2103,3.256,3.2914,3.3483,3.3408,3.3367,3.3497,3.381,3.3682,3.3629,3.3688,3.3639,3.3621,3.3457,3.3513,3.341,3.2861,3.2858,3.2917,3.2965,3.294,3.2953,3.2983,
            3.29,3.3051,3.2979,3.2919,3.2952,3.2943,3.2982,3.2982,3.2911,3.2992,3.3025,3.2917,3.2882,3.2835,3.2787,3.2503,3.246,3.232,3.2102,3.2135,3.2102,3.2102,3.2401,3.2042,3.2123,3.2092,3.2189,
            3.216,3.265,3.2969,3.3378,3.3928,3.3765,3.3348,3.3465,3.3458,3.3528,3.3506,3.3326,3.3562,3.3747,3.3687,3.3492,3.3147,3.3066,3.304,3.3086,3.3014,3.3026,3.3074,3.3113,3.3146,3.3302,3.3311,
            3.3342,3.3391,3.3221,3.3183,3.31,3.297,3.3004,3.3155,3.2941,3.2862,3.2983,3.3151,3.336,3.3387,3.3259,3.3342,3.3212,3.3159,3.3104,3.3606,3.3461,3.3422,3.3669,3.3608,3.3804,3.3895,3.4326,
            3.4195,3.4006,3.4234,3.4262,3.4044,3.4182,3.406,3.4076,3.4122,3.3888,3.3717,3.3538,3.3515,3.3549,3.3665,3.3895,3.3895,3.4055,3.412,3.4542,3.4605,3.4857,3.4941,3.513,3.5476,3.5046,3.5544,
            3.537,3.5326,3.5485,3.556,3.5964,3.5931,3.5765,3.5994,3.6002,3.6499,3.6436,3.6318,3.643,3.6686,3.7443,3.7647,3.7832,3.6841,3.6369,3.6699,3.7287,3.696,3.7077,3.6911,3.6575,3.66,3.6536,
            3.659,3.6688,3.6713,3.6705,3.6777,3.6968,3.7006,3.7166,3.7153,3.7345,3.7358,3.7876,3.8339,3.9057,3.9924,4.0665,4.0963,4.0491,3.9935,4.0447,4.0436,4.0493,4.0758,4.052,4.0372,4.0909,4.1219,
            4.1496,4.1057,4.0632,4.0807,4.041,4.0284,3.9611,3.967,3.993,3.9665,3.9186,3.9299,3.8829,3.8587,3.9074,3.9119,3.8526,3.8277,3.801,3.7787,3.7872,3.8032};

        public double[] dolar = new double[293] {2.9233,2.9475,2.9803,3.0094,3.0221,2.993,3.0243,3.0377,3.0193,3.0328,3.0416,3.0422,3.0297,3.0551,3.0441,3.0161,3.0151,3.0263,3.0032,2.9842,
            2.9662,2.9725,2.9577,2.9531,2.9096,2.9104,2.9348,2.9524,2.9292,2.934,2.9281,2.9494,2.957,2.9693,2.9659,2.9711,2.9502,2.941,2.9439,2.9348,2.9345,2.9665,2.9504,2.9425,2.9267,2.9199,2.9253,
            2.9254,2.9133,2.8927,2.8786,2.8848,2.8904,2.9137,2.8609,2.8605,2.8747,2.8775,2.8745,2.8841,2.8757,2.8784,2.8747,2.8385,2.83,2.8248,2.824,2.8328,2.8463,2.8479,2.862,2.8389,2.8321,2.8534,
            2.8642,2.8597,2.857,2.838,2.8327,2.826,2.8338,2.8509,2.8397,2.8226,2.82,2.8064,2.7978,2.8116,2.8642,2.9254,2.9249,2.9281,2.9433,2.9676,2.9542,2.964,2.9765,2.9698,2.983,2.9821,2.988,2.9875,
            2.9479,2.9402,2.9452,2.9613,2.9568,2.9543,2.9446,2.9515,2.9132,2.903,2.8946,2.8993,2.9152,2.9271,2.9357,2.9322,2.9349,2.9353,2.9037,2.9015,2.9107,2.8851,2.9318,2.9417,2.9182,2.8988,2.89,
            2.8898,2.8898,2.9266,2.9033,2.8937,2.8999,2.8965,2.8886,2.9539,2.982,3.0336,3.0783,3.0628,3.0371,3.0407,3.0431,3.0221,3.018,2.985,2.998,3.0129,3.0267,3.005,2.9899,2.9835,2.9606,2.9675,
            2.9611,2.9563,2.935,2.9392,2.9283,2.9408,2.9497,2.9412,2.9587,2.9443,2.9389,2.9598,2.9597,2.9611,2.9639,2.9494,2.9442,2.9339,2.9397,2.9605,2.9731,2.9793,2.9794,2.9792,2.9521,2.9527,2.99,
            2.9763,2.9818,3.0013,3.0058,3.009,3.0348,3.0592,3.0561,3.056,3.064,3.0864,3.0861,3.1023,3.0922,3.1013,3.0984,3.0841,3.0731,3.0791,3.078,3.0835,3.0831,3.1054,3.1054,3.108,3.1037,3.1173,
            3.1181,3.1405,3.1589,3.1793,3.1922,3.2105,3.2646,3.2846,3.2772,3.3115,3.3164,3.3896,3.3803,3.3644,3.3885,3.4108,3.4465,3.4241,3.4261,3.4236,3.4546,3.513,3.5408,3.5165,3.4369,3.373,3.4586,
            3.5236,3.4784,3.4848,3.522,3.5003,3.501,3.518,3.5163,3.5118,3.514,3.5104,3.5198,3.5393,3.5382,3.5255,3.5402,3.5802,3.5829,3.5999,3.6199,3.7087,3.7688,3.8571,3.8499,3.8062,3.7684,3.7894,
            3.784,3.8009,3.8244,3.7746,3.759,3.8102,3.8412,3.8848,3.8393,3.7942,3.7814,3.7404,3.7489,3.6851,3.7162,3.7478,3.7114,3.6815,3.6935,3.656,3.6528,3.677,3.6728,3.6277,3.6251,3.6169,3.5811,3.5753,3.5946};

        public double[] koç_f_k_oranı = new double[] { 52.7081730464656, 54.4798763421451, 54.3814483812741, 54.7259462443228, 53.5448107138698, 54.0861644986608, 55.7594398334692, 56.103937696518, 55.9070817747759, 55.3657279899849, 55.7594398334692, 56.0055097356469,
            55.4149419704204, 53.9877365377897, 55.1196580878072, 55.3165140095494, 56.0547237160825, 56.5960775008734, 56.8421474030512, 58.1709248748108, 58.7122786596018, 57.6787850704554, 58.367780796553, 59.0567765226506, 58.9583485617795, 57.4327151682777, 56.8421474030512,
            56.8913613834867, 56.9897893443578, 56.645291481309, 57.4327151682777, 57.0390033247933, 58.3185668161174, 59.1059905030861, 58.4169947769885, 60.5331959357168, 60.9761217596367, 60.0410561313614, 63.0431089379295, 62.1572572900897, 63.6828906835915, 62.9938949574939,
            63.9289605857692, 64.5195283509957, 64.4703143705602, 64.273458448818, 64.814812233609, 66.1928036858042, 66.9802273727728, 66.3404456271108, 67.7676510597415, 66.8817994119018, 67.0294413532084, 69.1456425119367, 71.4586995924072, 71.7539834750204, 70.6712759054385,
            68.8011446488879, 70.2283500815186, 70.1791361010831, 70.5728479445674, 69.2440704728078, 70.080708140212, 68.9980005706301, 24.6430932889137, 25.2622664871276, 24.9792158822298, 24.6784746145259, 24.5192586492709, 24.6254026261076, 24.8023092541687, 25.173813173097,
            25.8814396853415, 26.1821809530454, 25.9698929993721, 26.1467996274332, 26.3413969183004, 26.3413969183004, 26.6598288488104, 26.7836634884532, 26.270634267076, 26.5183035463615, 26.1467996274332, 25.8460583597293, 25.8814396853415, 25.633770406056, 24.7669279285565,
            24.0416107535059, 23.6524161717714, 23.1924589388125, 23.2278402644248, 23.2986029156492, 23.3339842412614, 23.0332429735575, 22.626357729017, 22.4671417637619, 22.5555950777925, 22.5555950777925, 22.3079257985069, 22.2194724844764, 23.7054881601898, 23.740869485802,
            23.5993441833531, 23.5993441833531, 23.7585601486081, 23.1924589388125, 22.944789659527, 22.4848324265681, 23.3516749040675, 23.3516749040675, 23.4755095437103, 23.5993441833531, 22.8563363454964, 22.6971203802414, 23.1747682760064, 22.4317604381497, 22.6794297174353,
            22.1840911588642, 22.9978616479453, 23.7054881601898, 23.581653520547, 23.3516749040675, 23.4047468924859, 22.166400496058, 22.2902351357008, 23.2455309272309, 23.2278402644248, 23.2101496016186, 13.9690822996379, 13.9375730914432, 14.2316590345935, 14.3892050755668,
            14.5887633941331, 14.5467511165402, 14.8513401290887, 14.8723462678851, 13.9795853690361, 13.9690822996379, 13.6224810094965, 12.6982109024528, 12.425131098099, 12.7927385270368, 12.8662600128244, 13.1603459559746, 13.1918551641693, 13.4439288297267, 13.7590209116734,
            13.4544318991249, 13.2023582335675, 13.6749963564876, 13.506947246116, 13.7905301198681, 13.8640516056556, 14.0636099242219, 14.305180520381, 14.0531068548237, 14.0846160630183, 14.0636099242219, 14.2631682427882, 14.2946774509828, 14.2631682427882, 14.1791436876024,
            14.1371314100095, 13.8115362586645, 13.9165669526468, 13.8115362586645, 13.6329840788947, 13.4859411073196, 13.2758797193551, 13.4964441767178, 13.5804687319036, 13.6014748707, 13.506947246116, 13.5489595237089, 13.4964441767178, 13.3914134827356, 13.6854994258858,
            13.506947246116, 13.6644932870894, 14.210652895797, 14.3366897285757, 13.8010331892663, 13.7065055646823, 13.7590209116734, 13.6854994258858, 13.5384564543107, 9.43891007178336, 9.44623841811238, 9.50486518874458, 9.73937227127335, 9.7247155786153, 9.67341715431214,
            9.65876046165409, 9.70273053962823, 9.67341715431214, 9.71005888595726, 9.67341715431214, 9.60013369102189, 9.71005888595726, 9.60013369102189, 9.57082030570579, 9.82731242722165, 9.71005888595726, 9.57814865203482, 9.55616361304775, 9.52685022773165, 9.4535667644414,
            9.38761164748019, 9.40959668646726, 9.34364156950604, 9.02852267735799, 9.12379117963531, 9.36562660849311, 9.2117313355836, 9.24837306722872, 9.07982110166116, 8.98455259938385, 9.10913448697726, 9.05783606267409, 9.07249275533214, 9.24837306722872, 9.2703581062158,
            9.28501479887385, 9.19707464292555, 9.17508960393848, 9.23371637457067, 9.2117313355836, 9.16043291128043, 9.12379117963531, 8.98455259938385, 8.98455259938385, 8.9992092920419, 9.29967149153189, 9.4828801497575, 9.44623841811238, 9.44623841811238, 9.49753684241555,
            9.62944707633799, 9.58547699836384, 9.71005888595726, 9.64410376899604, 9.58547699836384, 9.69540219329921, 9.7540289639314, 9.66608880798311, 9.76135731026043, 9.65143211532506, 9.73937227127335, 9.83464077355067, 9.87128250519579, 10.1131179340536, 9.8126557345636,
            9.65876046165409, 9.61479038367994, 9.63677542266701, 9.76135731026043, 9.76868565658945, 9.79067069557652, 9.57814865203482, 10.0325061244343, 10.1717447046858, 10.2889982459502, 10.4135801335436, 10.4062517872146, 10.4868635968338, 10.3989234408855, 10.7140423330336,
            10.7726691036658, 10.6334305234143, 10.7360273720207, 10.9338927229043, 11.1171013811299, 11.131758073788, 11.146414766446, 11.131758073788, 11.3076383856846, 11.1903848444202, 11.3003100393555, 11.4688620049231, 11.5055037365682, 11.0804596494848, 11.4029068879619,
            11.139086420117, 11.1903848444202, 11.1610714591041, 11.3222950783426, 11.2929816930265, 11.3003100393555, 11.2123698834072, 11.1830564980912, 11.0731313031558, 11.0364895715107, 10.8679376059431};

        public double[] koç_hissebaşınakar = new double[] { 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636,
            0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636,
            0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636,
            0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636,
            0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.20319429380636, 0.565269945484756, 0.565269945484756, 0.565269945484756,
            0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756,
            0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756,
            0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756,
            0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756,
            0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.565269945484756, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057,
            0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057,
            0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057,
            0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057,
            0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057, 0.952102630274057,
            0.952102630274057, 0.952102630274057, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836,
            1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836,
            1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836,
            1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836,
            1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836,
            1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836,
            1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836,
            1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836, 1.36456433020836};

        public double[] koç_pd_dd = new double[] { 1.14768127201412, 1.18625879376249, 1.1841155981098, 1.19161678289421, 1.16589843506196, 1.17768601115174, 1.21412033724743, 1.22162152203183, 1.21733513072646, 1.20554755463668, 1.21412033724743,
            1.21947832637915, 1.20661915246302, 1.17554281549905, 1.20018956550496, 1.20447595681034, 1.22054992420549, 1.23233750029527, 1.23769548942699, 1.26662863073827, 1.27841620682805, 1.25591265247483, 1.27091502204365, 1.28591739161246, 1.28377419595977,
            1.25055466334311, 1.23769548942699, 1.23876708725333, 1.24091028290602, 1.23340909812162, 1.25055466334311, 1.24198188073237, 1.2698434242173, 1.2869889894388, 1.27198661986999, 1.31806532640277, 1.32770970683986, 1.30734934813933, 1.3727168155463,
            1.35342805467211, 1.38664758728877, 1.37164521771995, 1.39200557642049, 1.40486475033661, 1.40379315251027, 1.39950676120489, 1.41129433729467, 1.4412990764323, 1.4584446416538, 1.44451386991133, 1.47559020687529, 1.45630144600111, 1.45951623948014,
            1.50559494601292, 1.55596004385107, 1.56238963080914, 1.53881447862957, 1.49809376122851, 1.52917009819248, 1.52809850036614, 1.53667128297689, 1.50773814166561, 1.52595530471345, 1.50238015253389, 1.47850554291114, 1.51565392338629, 1.49867180659765,
            1.48062830750972, 1.47107586681611, 1.47744416061185, 1.48805798360475, 1.51034701188984, 1.55280230386145, 1.57084580294938, 1.5581092153579, 1.5687230383508, 1.58039824364299, 1.58039824364299, 1.59950312503021, 1.60693280112524, 1.57615271444583,
            1.59101206663589, 1.5687230383508, 1.55067953926287, 1.55280230386145, 1.53794295167139, 1.48593521900617, 1.44241854473528, 1.41906813415089, 1.39147219436935, 1.39359495896793, 1.39784048816509, 1.39996325276367, 1.38191975367574, 1.35750796079207,
            1.34795552009845, 1.35326243159491, 1.35326243159491, 1.33840307940484, 1.33309616790839, 1.42225228104876, 1.42437504564734, 1.41588398725302, 1.41588398725302, 1.42543642794663, 1.39147219436935, 1.37661284217929, 1.34901690239774, 1.40102463506296,
            1.40102463506296, 1.40845431115799, 1.41588398725302, 1.37130593068284, 1.36175348998923, 1.39041081207006, 1.34583275549987, 1.36069210768994, 1.33097340330981, 1.37979698907716, 1.42225228104876, 1.41482260495373, 1.40102463506296, 1.40420878196083,
            1.32991202101052, 1.33734169710555, 1.39465634126722, 1.39359495896793, 1.39253357666864, 1.35971471482488, 1.35664768915235, 1.38527326209603, 1.40060839045872, 1.42003288638479, 1.4159435188214, 1.44559143365593, 1.44763611743762, 1.36073705671573,
            1.35971471482488, 1.32597743242697, 1.23601134603255, 1.20943045687055, 1.24521242305016, 1.25236881628608, 1.28099438922976, 1.2840614149023, 1.3085976202826, 1.33926787700797, 1.30961996217344, 1.28508375679314, 1.3310891418812, 1.31473167162767,
            1.34233490268051, 1.34949129591643, 1.3689157918425, 1.39242965533195, 1.36789344995165, 1.37096047562419, 1.3689157918425, 1.38834028776857, 1.3914073134411, 1.38834028776857, 1.3801615526418, 1.37607218507842, 1.3443795864622, 1.35460300537066,
            1.3443795864622, 1.32699977431782, 1.31268698784598, 1.29224015002906, 1.31370932973682, 1.32188806486359, 1.32393274864528, 1.31473167162767, 1.31882103919105, 1.31370932973682, 1.30348591082837, 1.33211148377205, 1.31473167162767, 1.33006679999036,
            1.38322857831434, 1.39549668100449, 1.34335724457135, 1.33415616755374, 1.33926787700797, 1.33211148377205, 1.31779869730021, 1.26471538395445, 1.2656973058364, 1.27355268089202, 1.30497418111449, 1.30301033735059, 1.29613688417692, 1.29417304041302,
            1.30006457170473, 1.29613688417692, 1.30104649358668, 1.29613688417692, 1.2863176653574, 1.30104649358668, 1.2863176653574, 1.28238997782959, 1.31675724369792, 1.30104649358668, 1.28337189971154, 1.28042613406568, 1.27649844653788, 1.26667922771835,
            1.25784193078078, 1.26078769642664, 1.25195039948907, 1.20972775856513, 1.2224927430305, 1.25489616513493, 1.23427580561393, 1.23918541502369, 1.21660121173879, 1.20383622727341, 1.2205288992666, 1.21365544609293, 1.21561928985684, 1.23918541502369,
            1.24213118066955, 1.24409502443345, 1.23231196185003, 1.22936619620417, 1.23722157125979, 1.23427580561393, 1.22740235244027, 1.2224927430305, 1.20383622727341, 1.20383622727341, 1.20580007103732, 1.24605886819736, 1.27060691524616, 1.2656973058364,
            1.2656973058364, 1.27257075901007, 1.29024535288521, 1.28435382159349, 1.30104649358668, 1.29220919664911, 1.28435382159349, 1.29908264982278, 1.30693802487839, 1.29515496229497, 1.30791994676035, 1.29319111853106, 1.30497418111449, 1.31773916557987,
            1.32264877498963, 1.35505219709405, 1.31479339993401, 1.29417304041302, 1.2882815091213, 1.29122727476716, 1.30791994676035, 1.3089018686423, 1.31184763428816, 1.28337189971154, 1.34425105639258, 1.36290757214967, 1.37861832226091, 1.39531099425409,
            1.39432907237214, 1.40513021307362, 1.39334715049019, 1.43556979141413, 1.44342516646975, 1.42476865071266, 1.43851555705999, 1.4650274478727, 1.48957549492151, 1.49153933868541, 1.49350318244931, 1.49153933868541, 1.51510546385226, 1.49939471374103,
            1.51412354197031, 1.53670774525521, 1.54161735466497, 1.48466588551174, 1.52787044831764, 1.49252126056736, 1.49939471374103, 1.49546702621322, 1.51706930761617, 1.51314162008836, 1.51412354197031, 1.50234047938688, 1.49841279185908, 1.48368396362979,
            1.47877435422003, 1.45619015093513};

        public double[] koçhissefiyatı = new double[] { 10.71,11.07,11.05,11.12,10.88,10.99,11.33,11.4,11.36,11.25,11.33,11.38,11.26,10.97,11.2,11.24,
            11.39,11.5,11.55,11.82,11.93,11.72,11.86,12,11.98,11.67,11.55,11.56,11.58,11.51,11.67,11.59,11.85,12.01,11.87,12.3,12.39,12.2,12.81,12.63,12.94,12.8,
            12.99,13.11,13.1,13.06,13.17,13.45,13.61,13.48,13.77,13.59,13.62,14.05,14.52,14.58,14.36,13.98,14.27,14.26,14.34,14.07,14.24,14.02,13.93,14.28,14.12,
            13.95,13.86,13.92,14.02,14.23,14.63,14.8,14.68,14.78,14.89,14.89,15.07,15.14,14.85,14.99,14.78,14.61,14.63,14.49,14,13.59,13.37,13.11,13.13,13.17,
            13.19,13.02,12.79,12.7,12.75,12.75,12.61,12.56,13.4,13.42,13.34,13.34,13.43,13.11,12.97,12.71,13.2,13.2,13.27,13.34,12.92,12.83,13.1,12.68,12.82,12.54,
            13,13.4,13.33,13.2,13.23,12.53,12.6,13.14,13.13,13.12,13.3,13.27,13.55,13.7,13.89,13.85,14.14,14.16,13.31,13.3,12.97,12.09,11.83,12.18,12.25,12.53,
            12.56,12.8,13.1,12.81,12.57,13.02,12.86,13.13,13.2,13.39,13.62,13.38,13.41,13.39,13.58,13.61,13.58,13.5,13.46,13.15,13.25,13.15,12.98,12.84,12.64,
            12.85,12.93,12.95,12.86,12.9,12.85,12.75,13.03,12.86,13.01,13.53,13.65,13.14,13.05,13.1,13.03,12.89,12.88,12.89,12.97,13.29,13.27,13.2,13.18,13.24,
            13.2,13.25,13.2,13.1,13.25,13.1,13.06,13.41,13.25,13.07,13.04,13,12.9,12.81,12.84,12.75,12.32,12.45,12.78,12.57,12.62,12.39,12.26,12.43,12.36,12.38,
            12.62,12.65,12.67,12.55,12.52,12.6,12.57,12.5,12.45,12.26,12.26,12.28,12.69,12.94,12.89,12.89,12.96,13.14,13.08,13.25,13.16,13.08,13.23,13.31,13.19,
            13.32,13.17,13.29,13.42,13.47,13.8,13.39,13.18,13.12,13.15,13.32,13.33,13.36,13.07,13.69,13.88,14.04,14.21,14.2,14.31,14.19,14.62,14.7,14.51,14.65,
            14.92,15.17,15.19,15.21,15.19,15.43,15.27,15.42,15.65,15.7,15.12,15.56,15.2,15.27,15.23,15.45,15.41,15.42,15.3,15.26,15.11,15.06,14.83};

        public double[] akbankası_pd_dd = new double[] { 0.957301027963811, 0.951481568827252, 0.966030216668648, 0.971849675805206, 0.976214270157625, 0.984943458862462, 0.995127512351438, 1.01695048411353, 1.02131507846595, 1.00531156584042, 1.00531156584042,
            0.999492106703857, 0.967485081452787, 0.952936433611392, 0.986398323646601, 0.98930805321488, 1.02567967281837, 1.01840534889767, 1.01549561932939, 1.04604777979632, 1.04604777979632, 1.02276994325009, 1.05332210371702, 1.08387426418395, 1.06787075155841,
            1.03586372630735, 1.04750264458046, 1.0416831854439, 1.03731859109148, 1.0416831854439, 1.03586372630735, 1.02422480803423, 1.05041237414874, 1.05332210371702, 1.03877345587562, 1.07223534591083, 1.09260345288879, 1.06496102199014, 1.07805480504739,
            1.08387426418395, 1.07514507547911, 1.07659994026325, 1.09551318245707, 1.09114858810465, 1.09405831767293, 1.09260345288879, 1.11442642465088, 1.14497858511781, 1.15661750339093, 1.15661750339093, 1.16971128644818, 1.13188480206055, 1.12461047813986,
            1.17844047515302, 1.17116615123232, 1.16389182731162, 1.12315561335572, 1.12315561335572, 1.15225290903851, 1.14497858511781, 1.13479453162883, 1.13188480206055, 1.16389182731162, 1.1668015568799, 1.08473174597705, 1.11229799110989, 1.09989318080011,
            1.08059680920713, 1.08197512146377, 1.09713655628683, 1.11918955239309, 1.11918955239309, 1.16191723234899, 1.16605216911891, 1.17018710588884, 1.20050997553496, 1.19775335102167, 1.17294373040212, 1.17707866717205, 1.17018710588884, 1.15089073429585,
            1.18121360394197, 1.17983529168533, 1.18810516522518, 1.1853485407119, 1.15778229557906, 1.11091967885324, 1.07232693566728, 1.05303056407429, 1.05165225181765, 1.06819199889735, 1.05578718858757, 1.06543537438407, 1.06130043761414, 1.0599221253575,
            1.03373419248131, 1.04889562730437, 1.06267874987078, 1.03373419248131, 1.05578718858757, 1.1095413665966, 1.0930016195169, 1.08748837049033, 1.09575824403018, 1.10264980531339, 1.09851486854347, 1.08886668274698, 1.07370524792392, 1.10264980531339,
            1.11229799110989, 1.08748837049033, 1.1095413665966, 1.09162330726026, 1.08197512146377, 1.07921849695048, 1.07370524792392, 1.08197512146377, 1.0599221253575, 1.0930016195169, 1.13021605044623, 1.13435098721615, 1.12745942593295, 1.11975772077458,
            1.09169696643536, 1.08367960805273, 1.09704187202379, 1.08768828724405, 1.099714324818, 1.11975772077458, 1.12643885276011, 1.11174036239195, 1.12109394717169, 1.17988790864434, 1.17988790864434, 1.18122413504144, 1.19191394621829, 1.09837809842089,
            1.06497243849325, 1.0302305521685, 0.991479986652435, 0.994152439446646, 1.02221319378587, 0.998161118637963, 1.02221319378587, 1.01553206180034, 1.02889432577139, 1.04359281613956, 1.02221319378587, 1.00484225062349, 1.03691168415403, 1.03156677856561,
            1.07165357047878, 1.08234338165562, 1.07566224967009, 1.09303319283247, 1.08501583444983, 1.09036074003826, 1.06764489128746, 1.07967092886141, 1.08635206084694, 1.09570564562668, 1.08635206084694, 1.07298979687588, 1.03691168415403, 1.04626526893377,
            1.06764489128746, 1.04760149533087, 1.04492904253666, 1.0542826273164, 1.07165357047878, 1.09436941922957, 1.09837809842089, 1.09169696643536, 1.1010505512151, 1.07566224967009, 1.07298979687588, 1.10639545680353, 1.09570564562668, 1.10238677761221,
            1.12510262636301, 1.12243017356879, 1.06363621209614, 1.08635206084694, 1.11040413599484, 1.08635206084694, 1.07432602327299, 1.06737713794303, 1.05563337970161, 1.06085282780891, 1.06085282780891, 1.05693824172843, 1.05954796578208, 1.06085282780891,
            1.05824310375526, 1.03606044929923, 1.0504139315943, 1.0504139315943, 1.08434034429176, 1.09608410253319, 1.09869382658684, 1.09216951645271, 1.10130355064049, 1.08303548226494, 1.08695006834541, 1.06868199996986, 1.06868199996986, 1.07912089618446,
            1.06215768983573, 1.05563337970161, 1.03867017335288, 1.00474376065542, 1.02170696700415, 1.03084100119193, 1.03214586321875, 1.03606044929923, 1.00996320876272, 1.0086583467359, 1.0295361391651, 1.01518265687002, 1.01518265687002, 1.02823127713828,
            1.02040210497732, 1.0399750353797, 1.01648751889685, 0.99691458849447, 1.00082917457495, 1.01257293281637, 0.998219450521296, 0.985170830253043, 0.973427072011616, 0.969512485931141, 0.961683313770189, 0.989085416333519, 1.0034388986286, 0.99691458849447,
            0.989085416333519, 0.995609726467645, 1.0190972429505, 1.02823127713828, 1.03867017335288, 1.0243166910578, 1.01648751889685, 1.0243166910578, 1.0190972429505, 1.01518265687002, 1.00735348470907, 1.0086583467359, 1.00082917457495, 1.01648751889685,
            1.0138777948432, 1.02040210497732, 1.0138777948432, 0.993000002413995, 0.978646520118917, 0.978646520118917, 0.998219450521296, 0.999524312548121, 0.974731934038442, 0.969512485931141, 1.0243166910578, 1.01779238092367, 1.0086583467359, 1.02170696700415,
            1.02823127713828, 1.01518265687002, 1.03345072524558, 1.02301182903097, 1.0399750353797, 1.02562155308463, 1.04780420754065, 1.03345072524558, 1.08825493037224, 1.09608410253319, 1.10260841266731, 1.13001051523064, 1.14958344563302, 1.12609592915017,
            1.13262023928429, 1.14958344563302, 1.15741261779397, 1.12609592915017, 1.15741261779397, 1.16263206590127, 1.14566885955255, 1.15480289374032, 1.17176610008905, 1.16654665198175, 1.1691563760354, 1.14697372157937, 1.15088830765985, 1.14436399752572,
            1.14044941144525, 1.13392510131112};

        public double[] akbankası_hissebaşınakar = new double[] { 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525,
            0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525,
            0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525,
            0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525,
            0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525, 0.252313508335525,
            0.252313508335525, 0.252313508335525, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882,
            0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882,
            0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882,
            0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882,
            0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882, 0.586049688195882,
            0.586049688195882, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566,
            0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566,
            0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566,
            0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566,
            0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 0.862772988117566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566,
            1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566,
            1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566,
            1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566,
            1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566,
            1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566,
            1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566,
            1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566, 1.13450380313566,
            1.13450380313566, 1.13450380313566};

        public double[] akbankası_f_k_oranı = new double[] { 26.0786671447252, 25.9201342137542, 26.3164665411816, 26.4749994721526, 26.5938991703808, 26.8316985668373, 27.1091311960365, 27.7036296871777, 27.8225293854059, 27.3865638252357, 27.3865638252357,
            27.2280308942647, 26.3560997739244, 25.959767446497, 26.8713317995801, 26.9505982650655, 27.9414290836341, 27.7432629199204, 27.6639964544349, 28.4962943420325, 28.4962943420325, 27.8621626181486, 28.6944605057463, 29.5267583933439, 29.0907928331737,
            28.2188617128333, 28.5359275747753, 28.3773946438043, 28.2584949455761, 28.3773946438043, 28.2188617128333, 27.9017958508914, 28.6151940402608, 28.6944605057463, 28.2981281783188, 29.2096925314019, 29.7645577898003, 29.0115263676882, 29.3682254623729,
            29.5267583933439, 29.2889589968874, 29.3285922296301, 29.8438242552858, 29.7249245570576, 29.8041910225431, 29.7645577898003, 30.3590562809415, 31.1913541685391, 31.508420030481, 31.508420030481, 31.8651191251657, 30.8346550738544, 30.6364889101407,
            32.1029185216222, 31.9047523579085, 31.7065861941948, 30.5968556773979, 30.5968556773979, 31.3895203322528, 31.1913541685391, 30.9139215393399, 30.8346550738544, 31.7065861941948, 31.7858526596802, 13.4288954648663, 13.7701634563496, 13.6165928601821,
            13.3777052661438, 13.394768665718, 13.5824660610338, 13.8554804542204, 13.8554804542204, 14.3844458410194, 14.4356360397419, 14.4868262384644, 14.862221029096, 14.8280942299477, 14.5209530376128, 14.5721432363352, 14.4868262384644, 14.2479386444261,
            14.6233334350577, 14.6062700354836, 14.7086504329285, 14.6745236337802, 14.333255642297, 13.7531000567754, 13.2753248686989, 13.0364372746606, 13.0193738750864, 13.2241346699764, 13.0705640738089, 13.190007870828, 13.1388176721055, 13.1217542725314,
            12.7975496806223, 12.9852470759381, 13.1558810716797, 12.7975496806223, 13.0705640738089, 13.7360366572013, 13.5312758623113, 13.4630222640146, 13.5654026614596, 13.6507196593304, 13.5995294606079, 13.4800856635888, 13.292388268273, 13.6507196593304,
            13.7701634563496, 13.4630222640146, 13.7360366572013, 13.5142124627371, 13.394768665718, 13.3606418665697, 13.292388268273, 13.394768665718, 13.1217542725314, 13.5312758623113, 13.9919876508137, 14.0431778495362, 13.9578608516654, 14.2991288431486,
            13.9407974520912, 13.8384170546462, 14.0090510503879, 13.8896072533687, 14.0431778495362, 9.71286782897994, 9.77082050099056, 9.6433246225672, 9.72445836338207, 10.2344418770755, 10.2344418770755, 10.2460324114776, 10.3387566866946, 9.52741927854596,
            9.23765591849286, 8.93630202403763, 8.60017652637603, 8.62335759518028, 8.86675881762489, 8.65812919838665, 8.86675881762489, 8.80880614561427, 8.92471148963551, 9.05220736805887, 8.86675881762489, 8.71608187039727, 8.99425469604825, 8.94789255843975,
            9.29560859050348, 9.38833286572047, 9.33038019370985, 9.48105714093746, 9.41151393452472, 9.45787607213321, 9.2608369872971, 9.36515179691622, 9.42310446892684, 9.50423820974171, 9.42310446892684, 9.3071991249056, 8.99425469604825, 9.07538843686312,
            9.2608369872971, 9.08697897126524, 9.063797902461, 9.14493164327586, 9.29560859050348, 9.49264767533959, 9.52741927854596, 9.46946660653534, 9.5506003473502, 9.33038019370985, 9.3071991249056, 9.5969624849587, 9.50423820974171, 9.56219088175233,
            9.75922996658844, 9.73604889778419, 9.22606538409073, 9.42310446892684, 9.63173408816507, 9.42310446892684, 9.31878965930772, 7.21020059817452, 7.13087076274228, 7.16612846737883, 7.16612846737883, 7.13968518890142, 7.15731404121969, 7.16612846737883,
            7.14849961506055, 6.99865437035522, 7.09561305810573, 7.09561305810573, 7.32478813824331, 7.40411797367554, 7.42174682599382, 7.37767469519813, 7.43937567831209, 7.31597371208417, 7.34241699056158, 7.21901502433365, 7.21901502433365, 7.28953043360675,
            7.17494289353797, 7.13087076274228, 7.01628322267349, 6.78710814253591, 6.9016956826047, 6.96339666571867, 6.9722110918778, 6.99865437035522, 6.82236584717247, 6.81355142101333, 6.95458223955953, 6.85762355180901, 6.85762355180901, 6.94576781340039,
            6.89288125644557, 7.02509764883263, 6.86643797796815, 6.73422158558109, 6.7606648640585, 6.83999469949074, 6.74303601174023, 6.65489175014885, 6.57556191471661, 6.5491186362392, 6.49623207928438, 6.68133502862626, 6.77829371637678, 6.73422158558109,
            6.68133502862626, 6.72540715942195, 6.88406683028643, 6.94576781340039, 7.01628322267349, 6.91932453492298, 6.86643797796815, 6.91932453492298, 6.88406683028643, 6.85762355180901, 6.80473699485419, 6.81355142101333, 6.7606648640585, 6.86643797796815,
            6.84880912564988, 6.89288125644557, 6.84880912564988, 6.70777830710368, 6.61081961935316, 6.61081961935316, 6.74303601174023, 6.75185043789936, 6.58437634087575, 6.5491186362392, 6.91932453492298, 6.87525240412729, 6.81355142101333, 6.9016956826047,
            6.94576781340039, 6.85762355180901, 6.98102551803694, 6.91051010876384, 7.02509764883263, 6.92813896108212, 7.07798420578745, 6.98102551803694, 7.35123141672072, 7.40411797367554, 7.44819010447123, 7.63329305381312, 7.76550944620018, 7.60684977533571,
            7.65092190613139, 7.76550944620018, 7.81839600315501, 7.60684977533571, 7.81839600315501, 7.85365370779156, 7.73906616772277, 7.80076715083673, 7.91535469090552, 7.88009698626897, 7.89772583858725, 7.74788059388191, 7.77432387235932, 7.73025174156363,
            7.70380846308622, 7.65973633229053};

        public double[] akbankhissefiyatı = new double[] {6.58,6.54,6.64,6.68,6.71,6.77,6.84,6.99,7.02,6.91,6.91,6.87,6.65,6.55,6.78,6.8,7.05,7,
            6.98,7.19,7.19,7.03,7.24,7.45,7.34,7.12,7.2,7.16,7.13,7.16,7.12,7.04,7.22,7.24,7.14,7.37,7.51,7.32,7.41,7.45,7.39,7.4,7.53,7.5,7.52,7.51,7.66,7.87,
            7.95,7.95,8.04,7.78,7.73,8.1,8.05,8,7.72,7.72,7.92,7.87,7.8,7.78,8,8.02,7.87,8.07,7.98,7.84,7.85,7.96,8.12,8.12,8.43,8.46,8.49,8.71,8.69,8.51,8.54,
            8.49,8.35,8.57,8.56,8.62,8.6,8.4,8.06,7.78,7.64,7.63,7.75,7.66,7.73,7.7,7.69,7.5,7.61,7.71,7.5,7.66,8.05,7.93,7.89,7.95,8,7.97,7.9,7.79,8,8.07,7.89,
            8.05,7.92,7.85,7.83,7.79,7.85,7.69,7.93,8.2,8.23,8.18,8.38,8.17,8.11,8.21,8.14,8.23,8.38,8.43,8.32,8.39,8.83,8.83,8.84,8.92,8.22,7.97,7.71,7.42,7.44,
            7.65,7.47,7.65,7.6,7.7,7.81,7.65,7.52,7.76,7.72,8.02,8.1,8.05,8.18,8.12,8.16,7.99,8.08,8.13,8.2,8.13,8.03,7.76,7.83,7.99,7.84,7.82,7.89,8.02,8.19,
            8.22,8.17,8.24,8.05,8.03,8.28,8.2,8.25,8.42,8.4,7.96,8.13,8.31,8.13,8.04,8.18,8.09,8.13,8.13,8.1,8.12,8.13,8.11,7.94,8.05,8.05,8.31,8.4,8.42,8.37,
            8.44,8.3,8.33,8.19,8.19,8.27,8.14,8.09,7.96,7.7,7.83,7.9,7.91,7.94,7.74,7.73,7.89,7.78,7.78,7.88,7.82,7.97,7.79,7.64,7.67,7.76,7.65,7.55,7.46,7.43,
            7.37,7.58,7.69,7.64,7.58,7.63,7.81,7.88,7.96,7.85,7.79,7.85,7.81,7.78,7.72,7.73,7.67,7.79,7.77,7.82,7.77,7.61,7.5,7.5,7.65,7.66,7.47,7.43,7.85,7.8,
            7.73,7.83,7.88,7.78,7.92,7.84,7.97,7.86,8.03,7.92,8.34,8.4,8.45,8.66,8.81,8.63,8.68,8.81,8.87,8.63,8.87,8.91,8.78,8.85,8.98,8.94,8.96,8.79,8.82,8.77,8.74,8.69};


        public double[] işbankası_pd_dd = new double[] { 0.610562890716917, 0.607867248815297, 0.610562890716917, 0.625388921175827, 0.614606353569347, 0.617301995470967, 0.622693279274207,
            0.624041100225017, 0.621345458323397, 0.615954174520157, 0.611910711667727, 0.610562890716917, 0.586302113602338, 0.578215187897478, 0.593041218356388, 0.595736860258008, 0.609215069766107,
            0.609215069766107, 0.610562890716917, 0.622693279274207, 0.617301995470967, 0.599780323110438, 0.606519427864488, 0.614606353569347, 0.610562890716917, 0.594389039307198, 0.587649934553148,
            0.590345576454768, 0.582258650749908, 0.579563008848288, 0.579563008848288, 0.580910829799098, 0.598432502159628, 0.594389039307198, 0.588997755503958, 0.609215069766107, 0.611910711667727,
            0.591693397405578, 0.599780323110438, 0.599780323110438, 0.609215069766107, 0.613258532618537, 0.625388921175827, 0.628084563077447, 0.633475846880687, 0.636171488782307, 0.638867130683927,
            0.653693161142836, 0.652345340192027, 0.656388803044456, 0.656388803044456, 0.638867130683927, 0.638867130683927, 0.652345340192027, 0.63388019316593, 0.644258414487167, 0.623367189749612,
            0.602610747107139, 0.606519427864488, 0.606519427864488, 0.602610747107139, 0.611775929572646, 0.622693279274207, 0.628084563077447, 0.589706595380234, 0.597517278762754, 0.596215498199001,
            0.592310156507741, 0.588404814816481, 0.592310156507741, 0.613138645527793, 0.60793152327278, 0.632665353984092, 0.635268915111599, 0.644381379057872, 0.650890281876638, 0.646984940185378,
            0.643079598494119, 0.644381379057872, 0.643079598494119, 0.636570695675352, 0.646984940185378, 0.644381379057872, 0.639174256802859, 0.639174256802859, 0.624854670601573, 0.596215498199001,
            0.588404814816481, 0.575387009178948, 0.563670984105169, 0.572783448051442, 0.571481667487688, 0.572783448051442, 0.570179886923935, 0.568878106360182, 0.561067422977662, 0.563670984105169,
            0.570179886923935, 0.555860300722649, 0.561067422977662, 0.585801253688974, 0.581895911997715, 0.585801253688974, 0.583197692561468, 0.584499473125221, 0.587103034252728, 0.577990570306455,
            0.568878106360182, 0.580594131433961, 0.584499473125221, 0.584499473125221, 0.589706595380234, 0.580594131433961, 0.574085228615195, 0.570179886923935, 0.568878106360182, 0.580594131433961,
            0.563670984105169, 0.570179886923935, 0.584499473125221, 0.588404814816481, 0.589706595380234, 0.598819059326507, 0.575387009178948, 0.574085228615195, 0.583197692561468, 0.575387009178948,
            0.593611937071494, 0.589794625498523, 0.593649492331847, 0.592364536720739, 0.611638870887357, 0.627058338220652, 0.629628249442868, 0.633483116276191, 0.645047716776162, 0.600074270387386,
            0.589794625498523, 0.574375158165228, 0.540966312276423, 0.54867604594307, 0.567950380109689, 0.57309020255412, 0.588509669887415, 0.587224714276307, 0.591079581109631, 0.601359225998494,
            0.589794625498523, 0.585939758665199, 0.606499048442926, 0.601359225998494, 0.624488426998436, 0.625773382609544, 0.612923826498465, 0.624488426998436, 0.616778693331789, 0.620633560165113,
            0.615493737720681, 0.629628249442868, 0.627058338220652, 0.62834329383176, 0.624488426998436, 0.620633560165113, 0.606499048442926, 0.623203471387328, 0.627058338220652, 0.610353915276249,
            0.618063648942897, 0.611638870887357, 0.620633560165113, 0.625773382609544, 0.620633560165113, 0.614208782109573, 0.624488426998436, 0.620633560165113, 0.616778693331789, 0.624488426998436,
            0.62191851577622, 0.627058338220652, 0.638622938720623, 0.634768071887299, 0.60392913722071, 0.610353915276249, 0.627058338220652, 0.618063648942897, 0.610353915276249, 0.604405091126188,
            0.599399665940878, 0.609410516311498, 0.604405091126188, 0.605656447422515, 0.60315373482986, 0.596896953348222, 0.596896953348222, 0.589388815570257, 0.596896953348222, 0.595645597051895,
            0.606907803718843, 0.611913228904153, 0.611913228904153, 0.610661872607825, 0.624426791867428, 0.620672722978445, 0.624426791867428, 0.619421366682118, 0.625678148163755, 0.62818086075641,
            0.61316458520048, 0.610661872607825, 0.60815916001517, 0.590640171866585, 0.60315373482986, 0.60815916001517, 0.61316458520048, 0.614415941496808, 0.604405091126188, 0.601902378533533,
            0.606907803718843, 0.59814830964455, 0.601902378533533, 0.610661872607825, 0.604405091126188, 0.60815916001517, 0.606907803718843, 0.599399665940878, 0.596896953348222, 0.61817001038579,
            0.615667297793135, 0.60315373482986, 0.595645597051895, 0.599399665940878, 0.599399665940878, 0.61817001038579, 0.626929504460083, 0.631934929645393, 0.62818086075641, 0.634437642238048,
            0.641945780016013, 0.636940354830703, 0.64820256149765, 0.64319713631234, 0.64319713631234, 0.650705274090306, 0.644448492608668, 0.640694423719685, 0.639443067423358, 0.640694423719685,
            0.63819171112703, 0.64820256149765, 0.651956630386633, 0.64820256149765, 0.64319713631234, 0.629432217052738, 0.625678148163755, 0.625678148163755, 0.635688998534375, 0.644448492608668,
            0.645699848904996, 0.640694423719685, 0.675732400016856, 0.679486468905838, 0.673229687424201, 0.685743250387476, 0.700759525943406, 0.697005457054423, 0.702010882239734, 0.697005457054423,
            0.713273088906681, 0.699508169647078, 0.709519020017699, 0.715775801499336, 0.747059708907524, 0.745808352611196, 0.752065134092834, 0.745808352611196, 0.765830053352436, 0.750813777796506,
            0.757070559278144, 0.775840903723057, 0.794611248167969, 0.769584122241419, 0.783349041501022, 0.790857179278987, 0.787103110390004, 0.789605822982659, 0.792108535575314, 0.782097685204694,
            0.783349041501022, 0.782097685204694, 0.800868029649607, 0.794611248167969, 0.794611248167969, 0.792108535575314};

        public double[] işbankası_hissebaşınakar = new double[] { 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847,
            0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847,
            0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847,
            0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847,
            0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847,
            0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847,
            0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.212474551871847, 0.501563576050902, 0.501563576050902, 0.501563576050902,
            0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902,
            0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902,
            0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902,
            0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902,
            0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902,
            0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902, 0.501563576050902,
            0.501563576050902, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456,
            0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456,
            0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456,
            0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456,
            0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456,
            0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 0.731611133699456, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338,
            1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338, 1.03083638112338};

        public double[] işbankası_f_k_oranı = new double[] { 21.3202002785362, 21.2260713589841, 21.3202002785362, 21.8379093360724, 21.4613936578642, 21.5555225774163, 21.7437804165203, 21.7908448762963,
            21.6967159567443, 21.5084581176402, 21.3672647383122, 21.3202002785362, 20.4730400025678, 20.1906532439117, 20.7083623014479, 20.802491221, 21.2731358187601, 21.2731358187601, 21.3202002785362,
            21.7437804165203, 21.5555225774163, 20.943684600328, 21.1790068992081, 21.4613936578642, 21.3202002785362, 20.755426761224, 20.5201044623439, 20.6142333818959, 20.3318466232398, 20.2377177036878,
            20.2377177036878, 20.2847821634638, 20.896620140552, 20.755426761224, 20.5671689221199, 21.2731358187601, 21.3672647383122, 20.6612978416719, 20.943684600328, 20.943684600328, 21.2731358187601,
            21.4143291980882, 21.8379093360724, 21.9320382556244, 22.1202960947285, 22.2144250142805, 22.3085539338325, 22.8262629913687, 22.7791985315927, 22.9203919109208, 22.9203919109208, 22.3085539338325,
            22.3085539338325, 22.7791985315927, 22.1344154326613, 22.4968117729366, 21.7673126464083, 21.0425199658577, 21.1790068992081, 21.1790068992081, 21.0425199658577, 21.3625582923346, 21.7437804165203,
            21.9320382556244, 9.03175632422771, 9.15138223580689, 9.13144458387702, 9.07163162808743, 9.01181867229785, 9.07163162808743, 9.39063405896523, 9.31088345124579, 9.68969883791317, 9.7295741417729,
            9.86913770528194, 9.96882596493125, 9.90901300914166, 9.84920005335207, 9.86913770528194, 9.84920005335207, 9.74951179370276, 9.90901300914166, 9.86913770528194, 9.78938709756249, 9.78938709756249,
            9.570072926334, 9.13144458387702, 9.01181867229785, 8.81244215299922, 8.63300328563046, 8.7725668491395, 8.75262919720963, 8.7725668491395, 8.73269154527977, 8.71275389334991, 8.59312798177073,
            8.63300328563046, 8.73269154527977, 8.51337737405128, 8.59312798177073, 8.97194336843812, 8.91213041264854, 8.97194336843812, 8.9320680645784, 8.95200571650826, 8.99188102036799, 8.85231745685895,
            8.71275389334991, 8.89219276071867, 8.95200571650826, 8.95200571650826, 9.03175632422771, 8.89219276071867, 8.79250450106936, 8.73269154527977, 8.71275389334991, 8.89219276071867, 8.63300328563046,
            8.73269154527977, 8.95200571650826, 9.01181867229785, 9.03175632422771, 9.17131988773675, 8.81244215299922, 8.79250450106936, 8.9320680645784, 8.81244215299922, 9.0915692800173, 6.27382469808826,
            6.31483008827184, 6.30116162487732, 6.50618857579523, 6.67021013652957, 6.69754706331862, 6.73855245350221, 6.86156862405296, 6.38317240524448, 6.27382469808826, 6.10980313735393, 5.75442308909621,
            5.83643386946337, 6.04146082038129, 6.0961346739594, 6.26015623469373, 6.24648777129921, 6.28749316148279, 6.39684086863901, 6.27382469808826, 6.23281930790468, 6.45151472221712, 6.39684086863901,
            6.64287320974051, 6.65654167313504, 6.51985703918976, 6.64287320974051, 6.56086242937335, 6.60186781955693, 6.54719396597882, 6.69754706331862, 6.67021013652957, 6.6838785999241, 6.64287320974051,
            6.60186781955693, 6.45151472221712, 6.62920474634598, 6.67021013652957, 6.49252011240071, 6.57453089276787, 6.50618857579523, 6.60186781955693, 6.65654167313504, 6.60186781955693, 6.53352550258429,
            6.64287320974051, 6.60186781955693, 6.56086242937335, 6.64287320974051, 6.61553628295146, 6.67021013652957, 6.79322630708032, 6.75222091689673, 6.42417779542807, 6.49252011240071, 6.67021013652957,
            6.57453089276787, 6.49252011240071, 4.68551565354764, 4.64671221128224, 4.72431909581305, 4.68551565354764, 4.69521651411399, 4.67581479298129, 4.62731049014953, 4.62731049014953, 4.56910532675143,
            4.62731049014953, 4.61760962958318, 4.70491737468034, 4.74372081694575, 4.74372081694575, 4.7340199563794, 4.84072942260926, 4.81162684091021, 4.84072942260926, 4.80192598034386, 4.85043028317561,
            4.86983200430831, 4.7534216775121, 4.7340199563794, 4.7146182352467, 4.57880618731778, 4.67581479298129, 4.7146182352467, 4.7534216775121, 4.76312253807845, 4.68551565354764, 4.66611393241494,
            4.70491737468034, 4.63701135071589, 4.66611393241494, 4.7340199563794, 4.68551565354764, 4.7146182352467, 4.70491737468034, 4.64671221128224, 4.62731049014953, 4.79222511977751, 4.7728233986448,
            4.67581479298129, 4.61760962958318, 4.64671221128224, 4.64671221128224, 4.79222511977751, 4.86013114374196, 4.89893458600737, 4.86983200430831, 4.91833630714007, 4.97654147053818, 4.93773802827277,
            5.02504577336993, 4.98624233110453, 4.98624233110453, 5.04444749450264, 4.99594319167088, 4.96684060997183, 4.95713974940548, 4.96684060997183, 4.94743888883912, 5.02504577336993, 5.05414835506899,
            5.02504577336993, 4.98624233110453, 4.87953286487467, 4.85043028317561, 4.85043028317561, 4.92803716770642, 4.99594319167088, 5.00564405223723, 4.96684060997183, 5.23846470582966, 5.26756728752872,
            5.21906298469696, 5.31607159036047, 5.43248191715669, 5.40337933545763, 5.44218277772304, 5.40337933545763, 5.5294905228202, 5.42278105659033, 5.50038794112114, 5.5488922439529, 5.79141375811168,
            5.78171289754533, 5.83021720037709, 5.78171289754533, 5.93692666660695, 5.82051633981073, 5.86902064264249, 6.01453355113776, 6.16004645963303, 5.966029248306, 6.07273871453587, 6.13094387793397,
            6.10184129623492, 6.12124301736762, 6.14064473850033, 6.06303785396952, 6.07273871453587, 6.06303785396952, 6.20855076246478, 6.16004645963303, 6.16004645963303, 6.14064473850033};

        public double[] işbankasıhissefiyatı = new double[] {4.53,4.51,4.53,4.64,4.56,4.58,4.62,4.63,4.61,4.57,4.54,4.53,4.35,4.29,4.4,4.42,4.52,
            4.52,4.53,4.62,4.58,4.45,4.5,4.56,4.53,4.41,4.36,4.38,4.32,4.3,4.3,4.31,4.44,4.41,4.37,4.52,4.54,4.39,4.45,4.45,4.52,4.55,4.64,4.66,4.7,4.72,
            4.74,4.85,4.84,4.87,4.87,4.74,4.74,4.84,4.703,4.78,4.625,4.471,4.5,4.5,4.471,4.539,4.62,4.66,4.53,4.59,4.58,4.55,4.52,4.55,4.71,4.67,4.86,4.88,
            4.95,5,4.97,4.94,4.95,4.94,4.89,4.97,4.95,4.91,4.91,4.8,4.58,4.52,4.42,4.33,4.4,4.39,4.4,4.38,4.37,4.31,4.33,4.38,4.27,4.31,4.5,4.47,4.5,4.48,
            4.49,4.51,4.44,4.37,4.46,4.49,4.49,4.53,4.46,4.41,4.38,4.37,4.46,4.33,4.38,4.49,4.52,4.53,4.6,4.42,4.41,4.48,4.42,4.56,4.59,4.62,4.61,4.76,4.88,
            4.9,4.93,5.02,4.67,4.59,4.47,4.21,4.27,4.42,4.46,4.58,4.57,4.6,4.68,4.59,4.56,4.72,4.68,4.86,4.87,4.77,4.86,4.8,4.83,4.79,4.9,4.88,4.89,4.86,
            4.83,4.72,4.85,4.88,4.75,4.81,4.76,4.83,4.87,4.83,4.78,4.86,4.83,4.8,4.86,4.84,4.88,4.97,4.94,4.7,4.75,4.88,4.81,4.75,4.83,4.79,4.87,4.83,4.84,
            4.82,4.77,4.77,4.71,4.77,4.76,4.85,4.89,4.89,4.88,4.99,4.96,4.99,4.95,5,5.02,4.9,4.88,4.86,4.72,4.82,4.86,4.9,4.91,4.83,4.81,4.85,4.78,4.81,4.88,
            4.83,4.86,4.85,4.79,4.77,4.94,4.92,4.82,4.76,4.79,4.79,4.94,5.01,5.05,5.02,5.07,5.13,5.09,5.18,5.14,5.14,5.2,5.15,5.12,5.11,5.12,5.1,5.18,5.21,
            5.18,5.14,5.03,5,5,5.08,5.15,5.16,5.12,5.4,5.43,5.38,5.48,5.6,5.57,5.61,5.57,5.7,5.59,5.67,5.72,5.97,5.96,6.01,5.96,6.12,6,6.05,6.2,6.35,6.15,
            6.26,6.32,6.29,6.31,6.33,6.25,6.26,6.25,6.4,6.35,6.35,6.33};
        #endregion

        public bool bittimi = false;
        public double ToplamHata = 0;

        public int ilkGirişNöronSayısı = 5;        // Bu problem için olan değerler (Hisse Senedi)
        public int ÇıkışNöronSayısı = 1;

        public double öğrenme_katsayısı = FormInput1.ögrenme_katsayısı;
        public double momentum_katsayısı = FormInput1.momentum_katsayısı;
        public int gizli_katman_sayısı = FormInput1.gizli_katman_sayısı;
        public int gerçek_katman_sayısı;

        public double sonlanma_için_hata_oranı = FormInput1.sonlanma_için_hata_oranı;
        public int sonlanma_için_iterasyon_sayısı = FormInput1.sonlanma_için_iterasyon_sayısı;
        public bool epoch = FormInput1.epoch;
        public int eğitim_yüzdesi = FormInput1.eğitim_yüzdesi;
        public int eğitim_sayısı;

        Random rnd = new Random();

        public List<double[,]> ağırlıkList = new List<double[,]>();               // Ağırlıklar Burada Tutulacak.
        public List<double[,]> Önceki_ağırlıkList = new List<double[,]>();        // Önceki Ağırlıklar Burada Tutulacak.
        public List<double[]> ara_proses_çıktıları = new List<double[]>();        // ara Nöron(Proses) Çıktıları Burada Tutulacak.
        public List<double[]> ara_proses_hataları = new List<double[]>();         // ara Nöron(Proses) Hataları Burada Tutulacak.
        public List<double[]> ara_proses_yardımcıları = new List<double[]>();     // ara Nöron(Proses) Hatalarının Hesaplanmasında yardımcı olarak kullanılacak.  
        public List<double[]> bias_ağırlıkları = new List<double[]>();            // Bias ağırlık değerleri burada tutulacak.
        public List<double[]> bias_ağırlık_değişimleri = new List<double[]>();    // Bias ağırlık değişim değerleri burada tutulacak.    

        public double[] çıkışlar;                                                 // çıktı değerleri  
        public double[] çıkış_hataları;                                           // çıktı hata değerleri

        public double[] koçhissefiyatı_gercek;                                    // en son karşılaştırma da kullanmak için klonlanmış dizi. 
        public double[] akbankhissefiyatı_gercek;
        public double[] işbankasıhissefiyatı_gercek;

        public double[] pd_dd;                                                      // 3 şirketi de dğerlendirmek için yapıldı.
        public double[] f_k;
        public double[] hissebaşınakar;

        public double euromax;   public double euromin;   public double dolarmax;   public double dolarmin;   public double koçhissemin;    public double koçhissemax;
        public double koçfkmin;   public double koçfkmax;   public double koçhissekarmax;   public double koçhissekarmin;   public double koçpd_ddmin;   public double koçpd_ddmax;
        public double akhissemin;   public double akhissemax;   public double akfkmin;   public double akfkmax;   public double akhissekarmax;   public double akhissekarmin;
        public double akpd_ddmin;   public double akpd_ddmax;   public double işhissemin;       public double işhissemax;       public double işfkmin;       public double işfkmax;
        public double işhissekarmax;    public double işhissekarmin;    public double işpd_ddmin;    public double işpd_ddmax;
        public Dugum()
        {
            #region Tanımlamalar

            gerçek_katman_sayısı = gizli_katman_sayısı + 1;                        // gizli + giriş + çıkış.
            çıkışlar = new double[ÇıkışNöronSayısı];
            çıkış_hataları = new double[ÇıkışNöronSayısı];

            pd_dd = new double[dolar.Length];
            f_k = new double[dolar.Length];
            hissebaşınakar = new double[dolar.Length];

            if (FormInput2.hepsiaynıNöronSayısı==0)
            {
                for (int i = 0; i < gerçek_katman_sayısı; i++)                     // ağırlıkların tanımlandığı yer.
                {
                    if (i == 0)
                    {
                        ağırlıkList.Add(new double[ilkGirişNöronSayısı, FormInput2.nöronDizileri[i]]);
                        Önceki_ağırlıkList.Add(new double[ilkGirişNöronSayısı, FormInput2.nöronDizileri[i]]);
                        ara_proses_çıktıları.Add(new double[FormInput2.nöronDizileri[i]]);
                        ara_proses_yardımcıları.Add(new double[FormInput2.nöronDizileri[i]]);
                        ara_proses_hataları.Add(new double[FormInput2.nöronDizileri[i]]);
                        bias_ağırlıkları.Add(new double[FormInput2.nöronDizileri[i]]);
                        bias_ağırlık_değişimleri.Add(new double[FormInput2.nöronDizileri[i]]);
                    }
                        
                    else if (i==gizli_katman_sayısı)
                    {
                        ağırlıkList.Add(new double[FormInput2.nöronDizileri[i - 1], ÇıkışNöronSayısı]);
                        Önceki_ağırlıkList.Add(new double[FormInput2.nöronDizileri[i - 1], ÇıkışNöronSayısı]);
                        bias_ağırlıkları.Add(new double[ÇıkışNöronSayısı]);
                        ara_proses_çıktıları.Add(new double[ÇıkışNöronSayısı]);
                        ara_proses_yardımcıları.Add(new double[ÇıkışNöronSayısı]);
                        ara_proses_hataları.Add(new double[ÇıkışNöronSayısı]);
                        bias_ağırlık_değişimleri.Add(new double[ÇıkışNöronSayısı]);
                    }
                        
                    else
                    {
                        ağırlıkList.Add(new double[FormInput2.nöronDizileri[i - 1], FormInput2.nöronDizileri[i]]);
                        Önceki_ağırlıkList.Add(new double[FormInput2.nöronDizileri[i - 1], FormInput2.nöronDizileri[i]]);
                        bias_ağırlıkları.Add(new double[FormInput2.nöronDizileri[i]]);
                        ara_proses_çıktıları.Add(new double[FormInput2.nöronDizileri[i]]);
                        ara_proses_yardımcıları.Add(new double[FormInput2.nöronDizileri[i]]);
                        ara_proses_hataları.Add(new double[FormInput2.nöronDizileri[i]]);
                        bias_ağırlık_değişimleri.Add(new double[FormInput2.nöronDizileri[i]]);
                    }
                }
            }
            else
            {
                for (int i = 0; i < gerçek_katman_sayısı; i++)          // ağırlıkların tanımlandığı yer.
                {
                    if (i==0)
                    {
                        ağırlıkList.Add(new double[ilkGirişNöronSayısı, FormInput2.hepsiaynıNöronSayısı]);
                        Önceki_ağırlıkList.Add(new double[ilkGirişNöronSayısı, FormInput2.hepsiaynıNöronSayısı]);
                        bias_ağırlıkları.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                        ara_proses_çıktıları.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                        ara_proses_yardımcıları.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                        ara_proses_hataları.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                        bias_ağırlık_değişimleri.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                    }
                        
                    else if (i== gizli_katman_sayısı)
                    {
                        ağırlıkList.Add(new double[FormInput2.hepsiaynıNöronSayısı, ÇıkışNöronSayısı]);
                        Önceki_ağırlıkList.Add(new double[FormInput2.hepsiaynıNöronSayısı, ÇıkışNöronSayısı]);
                        bias_ağırlıkları.Add(new double[ÇıkışNöronSayısı]);
                        ara_proses_çıktıları.Add(new double[ÇıkışNöronSayısı]);
                        ara_proses_yardımcıları.Add(new double[ÇıkışNöronSayısı]);
                        ara_proses_hataları.Add(new double[ÇıkışNöronSayısı]);
                        bias_ağırlık_değişimleri.Add(new double[ÇıkışNöronSayısı]);
                    }
                        
                    else
                    {
                        ağırlıkList.Add(new double[FormInput2.hepsiaynıNöronSayısı, FormInput2.hepsiaynıNöronSayısı]);
                        Önceki_ağırlıkList.Add(new double[FormInput2.hepsiaynıNöronSayısı, FormInput2.hepsiaynıNöronSayısı]);
                        bias_ağırlıkları.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                        ara_proses_çıktıları.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                        ara_proses_yardımcıları.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                        ara_proses_hataları.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                        bias_ağırlık_değişimleri.Add(new double[FormInput2.hepsiaynıNöronSayısı]);
                    }
                }
            }

            #endregion

            çıktı_değerleri_kopya();
            ilkdeğeratama();
            Normalizasyon();
           
        }
        public void ilkdeğeratama()     // başlangıç rastgele değer atanması işlemleri burada yapıldı
        {
            eğitim_sayısı = (dolar.Length * eğitim_yüzdesi) / 100;

            for (int g = 0; g < ağırlıkList.Count; g++)
            {
                for (int i = 0; i < ağırlıkList[g].GetLength(0); i++)
                {
                    for (int j = 0; j < ağırlıkList[g].GetLength(1); j++)
                    {
                        ağırlıkList[g][i, j] = rnd.NextDouble();
                    }
                }

                for (int i = 0; i < bias_ağırlıkları[g].Length; i++)
                {
                    bias_ağırlıkları[g][i] = rnd.NextDouble();
                }
            }
            euromax = euro.Max();        euromin = euro.Min();   dolarmax = dolar.Max();      dolarmin = dolar.Min();   koçhissemin = koçhissefiyatı.Min();   koçhissemax = koçhissefiyatı.Max();
            koçfkmax = koç_f_k_oranı.Max();    koçfkmin = koç_f_k_oranı.Min();   koçhissekarmax = koç_hissebaşınakar.Max(); koçhissekarmin = koç_hissebaşınakar.Min();
            koçpd_ddmin = koç_pd_dd.Min();   koçpd_ddmax = koç_pd_dd.Max();  akhissemin = akbankhissefiyatı.Min(); akhissemax = akbankhissefiyatı.Max();
            akfkmin = akbankası_f_k_oranı.Min(); akfkmax = akbankası_f_k_oranı.Max();  akhissekarmax = akbankası_hissebaşınakar.Max();  akhissekarmin = akbankası_hissebaşınakar.Min();
            akpd_ddmin = akbankası_pd_dd.Min();  akpd_ddmax = akbankası_pd_dd.Max();  işhissemin = işbankasıhissefiyatı.Min(); işhissemax = işbankasıhissefiyatı.Max();
            işfkmax = işbankası_f_k_oranı.Max();  işfkmin = işbankası_f_k_oranı.Min(); işhissekarmax = işbankası_hissebaşınakar.Max();  işhissekarmin = işbankası_hissebaşınakar.Min();
            işpd_ddmin = işbankası_pd_dd.Min(); işpd_ddmax = işbankası_pd_dd.Max();
        }

        public void çıktı_değerleri_kopya()
        {  
            koçhissefiyatı_gercek = new double[koçhissefiyatı.Length];
            akbankhissefiyatı_gercek = new double[akbankhissefiyatı.Length];
            işbankasıhissefiyatı_gercek = new double[işbankasıhissefiyatı.Length];

            koçhissefiyatı_gercek = (double[])koçhissefiyatı.Clone();
            akbankhissefiyatı_gercek = (double[])akbankhissefiyatı.Clone();
            işbankasıhissefiyatı_gercek = (double[])işbankasıhissefiyatı.Clone();
        }

        public void Normalizasyon()     // ağın girdilerini 0-1 aralığına çektik.
        {
            for (int i = 0; i < euro.Length; i++)
            {
                euro[i] = normalleştirme(euro[i], euromax, euromin);
                euro[i] = sigmoid_hesabı(euro[i]);

                dolar[i] = normalleştirme(dolar[i], dolarmax, dolarmin);
                dolar[i] = sigmoid_hesabı(dolar[i]);

                koçhissefiyatı[i] = normalleştirme(koçhissefiyatı[i], koçhissemax, koçhissemin);
                koçhissefiyatı[i] = sigmoid_hesabı(koçhissefiyatı[i]);

                koç_f_k_oranı[i] = normalleştirme(koç_f_k_oranı[i], koçfkmax, koçfkmin);
                koç_f_k_oranı[i] = sigmoid_hesabı(koç_f_k_oranı[i]);

                koç_hissebaşınakar[i] = normalleştirme(koç_hissebaşınakar[i], koçhissekarmax, koçhissekarmin);
                koç_hissebaşınakar[i] = sigmoid_hesabı(koç_hissebaşınakar[i]);

                koç_pd_dd[i] = normalleştirme(koç_pd_dd[i], koçpd_ddmax, koçpd_ddmin);
                koç_pd_dd[i] = sigmoid_hesabı(koç_pd_dd[i]);

                akbankhissefiyatı[i] = normalleştirme(akbankhissefiyatı[i], akhissemax, akhissemin);
                akbankhissefiyatı[i] = sigmoid_hesabı(akbankhissefiyatı[i]);

                akbankası_f_k_oranı[i] = normalleştirme(akbankası_f_k_oranı[i], akfkmax, akfkmin);
                akbankası_f_k_oranı[i] = sigmoid_hesabı(akbankası_f_k_oranı[i]);

                akbankası_hissebaşınakar[i] = normalleştirme(akbankası_hissebaşınakar[i], akhissekarmax, akhissekarmin);
                akbankası_hissebaşınakar[i] = sigmoid_hesabı(akbankası_hissebaşınakar[i]);

                akbankası_pd_dd[i] = normalleştirme(akbankası_pd_dd[i], akpd_ddmax, akpd_ddmin);
                akbankası_pd_dd[i] = sigmoid_hesabı(akbankası_pd_dd[i]);

                işbankasıhissefiyatı[i] = normalleştirme(işbankasıhissefiyatı[i], işhissemax, işhissemin);
                işbankasıhissefiyatı[i] = sigmoid_hesabı(işbankasıhissefiyatı[i]);

                işbankası_f_k_oranı[i] = normalleştirme(işbankası_f_k_oranı[i], işfkmax, işfkmin);
                işbankası_f_k_oranı[i] = sigmoid_hesabı(işbankası_f_k_oranı[i]);

                işbankası_hissebaşınakar[i] = normalleştirme(işbankası_hissebaşınakar[i], işhissekarmax, işhissekarmin);
                işbankası_hissebaşınakar[i] = sigmoid_hesabı(işbankası_hissebaşınakar[i]);

                işbankası_pd_dd[i] = normalleştirme(işbankası_pd_dd[i], işpd_ddmax, işpd_ddmin);
                işbankası_pd_dd[i] = sigmoid_hesabı(işbankası_pd_dd[i]);
            }
        }

        public ArrayList deNormalizasyon(ArrayList aList, double max, double min) // 0-1 aralığında olan sonuçları gerçek değer aralığına çektik.
        {
            ArrayList gerçekSonuc = new ArrayList();
            for (int i = 0; i < aList.Count; i++)
            {
                gerçekSonuc.Add(-(((double)aList[i] * (min - max)) - min));
            }
            return gerçekSonuc;
        }

        public double normalleştirme(double gerçek, double max, double min)
        {
            return -((gerçek - min) / (min - max));  
        }
        
        public double sigmoid_hesabı(double değer)
        {
            return 1 / (1 + Math.Exp(-değer));
        }

        public ArrayList test_işlemi_ak_bankası()
        {
            double sonuç = 0;
            ArrayList testsonuç_ak_bankası = new ArrayList();

            for (int j = eğitim_sayısı; j < dolar.Length; j++)              // bağımlılık yaratan kısım var burada.
            {
                Sıfırla();

                for (int i = 0; i < ara_proses_çıktıları.Count; i++)
                {
                    for (int k = 0; k < ara_proses_çıktıları[i].Length; k++)
                    {
                        if (i == 0)
                        {
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (dolar[j] * ağırlıkList[i][0, k]);
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (euro[j] * ağırlıkList[i][1, k]);
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (f_k[j] * ağırlıkList[i][2, k]);
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (hissebaşınakar[j] * ağırlıkList[i][3, k]);
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (pd_dd[j] * ağırlıkList[i][4, k]);
                        }
                        else
                        {
                            for (int l = 0; l < ara_proses_çıktıları[i - 1].Length; l++)
                            {
                                ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (ara_proses_çıktıları[i - 1][l] * ağırlıkList[i][l, k]);
                            }
                        }
                        ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (bias_ağırlıkları[i][k] * 1);
                        ara_proses_çıktıları[i][k] = sigmoid_hesabı(ara_proses_çıktıları[i][k]);
                        sonuç = ara_proses_çıktıları[i][k];
                    }
                }
                testsonuç_ak_bankası.Add(sonuç);
            }
            return testsonuç_ak_bankası;
        }

        public void  Sıfırla()
        {
            // ***
            for (int i = 0; i < ağırlıkList.Count; i++)
            {
                for (int l = 0; l < ağırlıkList[i].GetLength(0); l++)
                {
                    for (int k = 0; k < ağırlıkList[i].GetLength(1); k++)
                    {
                        Önceki_ağırlıkList[i][l, k] = 0;
                    }
                }
            }

            for (int i = 0; i < ağırlıkList.Count; i++)
            {
                for (int k = 0; k < ağırlıkList[i].GetLength(1); k++)
                {
                    bias_ağırlık_değişimleri[i][k] = 0;
                }
            }
            // ***

            for (int i = 0; i < ara_proses_çıktıları.Count; i++)
            {
                for (int j = 0; j < ara_proses_çıktıları[i].Length; j++)
                {
                    ara_proses_çıktıları[i][j] = 0;
                    ara_proses_hataları[i][j] = 0;
                    ara_proses_yardımcıları[i][j] = 0;
                }
            }
        }

        public void degerAta(int deger)
        {
            switch (deger)
            {
                case 0:
                    pd_dd = (double[])akbankası_pd_dd.Clone();
                    f_k = (double[])akbankası_f_k_oranı.Clone();
                    hissebaşınakar = (double[])akbankası_hissebaşınakar.Clone();
                    break;
                case 1:
                    pd_dd = (double[])işbankası_pd_dd.Clone();
                    f_k = (double[])işbankası_f_k_oranı.Clone();
                    hissebaşınakar = (double[])işbankası_hissebaşınakar.Clone();
                    break;
                case 2:
                    pd_dd = (double[])koç_pd_dd.Clone();
                    f_k = (double[])koç_f_k_oranı.Clone();
                    hissebaşınakar = (double[])koç_hissebaşınakar.Clone();
                    break;
            }
        }
        public void net__hata_yeniağırlıklar_hesapla_ak_bankası()        // 1 epoch işlemi yapılıyor burada.
        {

            ToplamHata = 0;

            for (int j = 0; j < eğitim_sayısı; j++)              // bağımlılık yaratan kısım var burada.
            {
                Sıfırla();
                for (int i = 0; i < ara_proses_çıktıları.Count; i++)
                {   
                    for (int k = 0; k < ara_proses_çıktıları[i].Length; k++)
                    {
                        if (i == 0)
                        {
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (dolar[j] * ağırlıkList[i][0,k]);
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (euro[j] * ağırlıkList[i][1,k]);
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (f_k[j] * ağırlıkList[i][2, k]);
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (hissebaşınakar[j] * ağırlıkList[i][3, k]);
                            ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (pd_dd[j] * ağırlıkList[i][4,k]);
                        }
                        else 
                        {
                            for (int l = 0; l < ara_proses_çıktıları[i-1].Length; l++)
                            {
                                ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (ara_proses_çıktıları[i-1][l] * ağırlıkList[i][l,k]);
                            }
                        }
                        ara_proses_çıktıları[i][k] = ara_proses_çıktıları[i][k] + (bias_ağırlıkları[i][k] * 1);
                        ara_proses_çıktıları[i][k] = sigmoid_hesabı(ara_proses_çıktıları[i][k]);
                    }
                }

                for (int i = ara_proses_hataları.Count-1; i >= 0; i--)      // çıktının ve ara proseslerin hataları bulundu.
                {
                    for (int l = ara_proses_çıktıları[i].Length-1; l >= 0; l--)
                    {
                        if (i == ara_proses_hataları.Count - 1)
                        {
                            ara_proses_hataları[i][l] = (akbankhissefiyatı[j] - ara_proses_çıktıları[i][l]) * (ara_proses_çıktıları[i][l]) * (1 - ara_proses_çıktıları[i][l]);
                            continue;
                        }
                        for (int k = 0; k < ara_proses_çıktıları[i+1].Length; k++)
                        {
                            ara_proses_yardımcıları[i][l] = ara_proses_yardımcıları[i][l] + (ara_proses_hataları[i + 1][k] * ağırlıkList[i+1][l,k]);
                        }
                        ara_proses_hataları[i][l] = ara_proses_çıktıları[i][l] * (1 - ara_proses_çıktıları[i][l]) * ara_proses_yardımcıları[i][l];
                    }
                }

                for (int i = 0; i < ara_proses_hataları[ara_proses_hataları.Count - 1].Length; i++)
                {
                    ToplamHata = ToplamHata + (ara_proses_hataları[ara_proses_hataları.Count - 1][i] * ara_proses_hataları[ara_proses_hataları.Count - 1][i]);
                }
                ToplamHata = Math.Sqrt(ToplamHata);

                //if (ToplamHata <= sonlanma_için_hata_oranı) // || epoch sayısı da eklenecek.
                //{
                //    bittimi = true;
                //    break;
                //}



                // Burada ağırlık değişim miktarları hesaplandı.

                for (int i = 0; i < Önceki_ağırlıkList.Count; i++)
                {
                    for (int l = 0; l < Önceki_ağırlıkList[i].GetLength(1); l++)
                    {
                        if (i == 0) 
                        {
                            Önceki_ağırlıkList[i][0, l] = (öğrenme_katsayısı * dolar[j] * ara_proses_hataları[i][l]) + (momentum_katsayısı * Önceki_ağırlıkList[i][0, l]);
                            Önceki_ağırlıkList[i][1, l] = (öğrenme_katsayısı * euro[j] * ara_proses_hataları[i][l]) + (momentum_katsayısı * Önceki_ağırlıkList[i][1, l]);
                            Önceki_ağırlıkList[i][2, l] = (öğrenme_katsayısı * f_k[j] * ara_proses_hataları[i][l]) + (momentum_katsayısı * Önceki_ağırlıkList[i][2, l]);
                            Önceki_ağırlıkList[i][3, l] = (öğrenme_katsayısı * hissebaşınakar[j] * ara_proses_hataları[i][l]) + (momentum_katsayısı * Önceki_ağırlıkList[i][3, l]);
                            Önceki_ağırlıkList[i][4, l] = (öğrenme_katsayısı * pd_dd[j] * ara_proses_hataları[i][l]) + (momentum_katsayısı * Önceki_ağırlıkList[i][4, l]);
                            bias_ağırlık_değişimleri[i][l] = (öğrenme_katsayısı * ara_proses_hataları[i][l]) + (momentum_katsayısı * bias_ağırlık_değişimleri[i][l]);
                        }
                        else
                        {
                            bias_ağırlık_değişimleri[i][l] = (öğrenme_katsayısı * ara_proses_hataları[i][l]) + (momentum_katsayısı * bias_ağırlık_değişimleri[i][l]);

                            for (int k = 0; k < Önceki_ağırlıkList[i].GetLength(0); k++)
                            {
                                Önceki_ağırlıkList[i][k, l] = (öğrenme_katsayısı * ara_proses_çıktıları[i - 1][k] * ara_proses_hataları[i][l]) + (momentum_katsayısı * Önceki_ağırlıkList[i][k, l]);
                            }
                        }
                    }
                }

                // Burada yeni ağırlıklar atandı.

                for (int i = 0; i < ağırlıkList.Count; i++)
                {
                    for (int l = 0; l < ağırlıkList[i].GetLength(0); l++)
                    {
                        for (int k = 0; k < ağırlıkList[i].GetLength(1); k++)
                        {
                            ağırlıkList[i][l, k] = ağırlıkList[i][l, k] + Önceki_ağırlıkList[i][l, k];
                        }
                    }
                }

                for (int i = 0; i < ağırlıkList.Count; i++)
                {
                    for (int k = 0; k < ağırlıkList[i].GetLength(1); k++)
                    {
                        bias_ağırlıkları[i][k] = bias_ağırlıkları[i][k] + bias_ağırlık_değişimleri[i][k];
                    }
                }

            }
        }
    }
}
